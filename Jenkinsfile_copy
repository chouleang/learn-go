pipeline {
    agent {
        docker {
            image 'google/cloud-sdk:alpine'
            args '-v /var/run/docker.sock:/var/run/docker.sock -u root:root'
        }
    }

    environment {
        DOCKER_IMAGE = 'chouleang/go-hello-operator'
        DOCKER_TAG = "build-${BUILD_NUMBER}"
        VAULT_ADDR = 'http://vault.qwerfvcxza.site'
    }

    stages {
        stage('Setup') {
            steps {
                sh '''
                    # Install dependencies
                    apk add --no-cache go docker
                    go version
                    docker --version
                '''
            }
        }
        
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Load Vault Secrets') {
            steps {
                withVault(
                    configuration: [
                        vaultUrl: "${VAULT_ADDR}",
                        vaultCredentialId: 'b1fd7cdc-25c5-4a31-9e87-3dce22039c11'
                    ],
                    vaultSecrets: [
                        [
                            path: 'secret/jenkins/go-operator',
                            secretValues: [
                                [envVar: 'VAULT_TOKEN', vaultKey: 'vault-token'],
                                [envVar: 'ENVIRONMENT', vaultKey: 'environment'],
                                [envVar: 'DOCKER_PASSWORD', vaultKey: 'docker-password']
                            ]
                        ]
                    ]
                ) {
                    echo "âœ… Vault secrets loaded"
                }
            }
        }
        
        stage('Dependencies') {
            steps {
                sh 'go mod download'
            }
        }
        
        stage('Build Docker Image') {
            steps {
                sh """
                docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} .
                """
            }
        }
        
        stage('Test Container') {
            steps {
                sh """
                docker run -d --name test-app \
                  -e VAULT_ADDR="${VAULT_ADDR}" \
                  -e VAULT_TOKEN="${VAULT_TOKEN}" \
                  -e ENVIRONMENT="${ENVIRONMENT}" \
                  -p 8080:8080 ${DOCKER_IMAGE}:${DOCKER_TAG} &
                sleep 10
                curl -f http://localhost:8080 || exit 1
                docker stop test-app
                docker rm test-app
                """
            }
        }
        
        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'docker-hub-cred',
                    usernameVariable: 'DOCKER_USERNAME',
                    passwordVariable: 'DOCKER_PASSWORD'
                )]) {
                    sh """
                    echo \$DOCKER_PASSWORD | docker login -u \$DOCKER_USERNAME --password-stdin
                    docker push ${DOCKER_IMAGE}:${DOCKER_TAG}
                    docker logout
                    """
                }
            }
        }
    }
    
    post {
        always {
            sh 'docker rm -f test-app || true'
            cleanWs()
        }
    }
}